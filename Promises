let promise = new Promise((resolve, reject) => {
                          setTimeout(() => resolve('output'), 2000)
});
promise.then(() => {
    console.log('first')
    throw new Error('error from first')
}).then(() => {
    console.log('second')
}).then(() => {
    console.log('third')
}).catch(err => console.log('error---', err))
.finally(() => console.log('---finally-'));
console.log('bottom');
//========================
// o/p bottom first error finally
//==========================
let promise11 = new Promise((resolve, reject) => {
                          setTimeout(() => resolve('output'), 2000)
});
promise.then(() => {
    console.log('first')
}).then(() => {
    setTimeout(() => console.log('second'), 2000)
    
}).then(() => {
    console.log('third')
}).catch(err => console.log('error---', err))
.finally(() => console.log('---finally-'));

// o/p:- first third finally second
// how to come the second in the order
// ================================
let promise22 = new Promise((resolve, reject) => {
                          setTimeout(() => resolve('output'), 2000)
});
promise.then(() => {
    console.log('first')
}).then(() => {
    return new Promise((resolve, reject) => {
           setTimeout(() => {console.log('second'); resolve()}, 2000)
    })
 
    
}).then(() => {
    console.log('third')
}).catch(err => console.log('error---', err))
.finally(() => console.log('---finally-'));
// o/p:- first second third finally